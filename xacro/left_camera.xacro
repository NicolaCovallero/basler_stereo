<?xml version="1.0" ?>
<robot xmlns:xacro="http://ros.org/wiki/xacro" >

  <property name="M_PI" value="3.1415926535897931" />
  <!--
	<property name="cam_px" value=" 0.9014760" />
	<property name="cam_py" value="-0.0594" />
	<property name="cam_pz" value=" 0.725172" />
  <property name="cam_or" value=" 0.280" />
  <property name="cam_op" value=" 1.379" />
  <property name="cam_oy" value="-2.9210" />
  -->
  <property name="cam_px" value=" 1.0" />
  <property name="cam_py" value=" .25" />
  <property name="cam_pz" value=" 2.3" />
	<property name="cam_or" value=" 0." />
	<property name="cam_op" value=" 1.57" />
	<property name="cam_oy" value=" 0" />

  <xacro:property name="width" value="0.05" /> <!-- Square dimensions (widthxwidth) of beams -->
  <xacro:property name="height" value="0.1" /> <!-- Square dimensions (widthxwidth) of beams -->


  <xacro:macro name="left_camera" params="prefix parent">

  
    <link name="left_camera_link">
      <visual name='visual'>
        <origin xyz="0.0 0.0 0.0" rpy="0 3.1415 0"/>
        <geometry>
          <!--<box size="${height} ${width} ${width}"/>-->
          <mesh filename="package://basler_stereo/objects/BodyWithLence.dae"/>
        </geometry>
      </visual>
      <collision>
        <origin xyz="0.0 0.0 0.0" rpy="0 0 0"/>
        <geometry>
          <box size="0.07271 0.27794 0.073"/>
        </geometry>
      </collision>
      <inertial>
        <mass value="0.001" />
        <origin xyz="0 0 0" />
        <inertia ixx="0.0001" ixy="0.0" ixz="0.0"
                 iyy="0.0001" iyz="0.0"
                 izz="0.0001" />
      </inertial>
    </link>

       <joint name="left_camera_joint" type="fixed">
      <origin xyz="${cam_px} ${cam_py} ${cam_pz}" rpy="${cam_or} ${cam_op} ${cam_oy}"/>
      <parent link="${parent}"/>
      <child link="left_camera_link"/>
    </joint> 


    <joint name="left_camera_optical_joint" type="fixed">
      <origin xyz="0.000 0 0.000" rpy="-1.57 0 -1.57"/>
      <parent link="left_camera_link"/>
      <child link="left_camera_optical_frame" />
    </joint>
    <link name="left_camera_optical_frame">
      <inertial>
        <mass value="0.001" />
        <origin xyz="0 0 0" />
        <inertia ixx="0.0001" ixy="0.0" ixz="0.0"
                 iyy="0.0001" iyz="0.0"
                 izz="0.0001" />
      </inertial>
    </link>
    <!--
    <joint name="left_camera_rgb_optical_joint" type="fixed">
      <origin xyz="0 0 0" rpy="${-M_PI/2} 0 ${-M_PI/2}" />
      <parent link="left_camera_rgb_frame" />
      <child link="left_camera_rgb_optical_joint" />
    </joint>
    <link name="left_camera_rgb_optical_joint">
      <inertial>
        <mass value="0.001" />
        <origin xyz="0 0 0" />
        <inertia ixx="0.0001" ixy="0.0" ixz="0.0"
                 iyy="0.0001" iyz="0.0"
                 izz="0.0001" />
      </inertial>
    </link>
    -->


      <!-- camera -->
  <gazebo reference="left_camera_link">
    <sensor type="camera" name="camera_left">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.57</horizontal_fov><!-- in radians -->
        <image>
          <width>2590</width>
          <height>1942</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev><!-- 0.007 -->
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>stereo/left</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>left_camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
  </xacro:macro>

</robot>
